version: 2.1
commands:
  download_hex:
    description: Installs Hex and Rebar to the current executor
    steps:
      - run: mix local.hex --force
      - run: mix local.rebar --force
  fetch_from_cache:
    description: Restores dependencies and compiled files from cache
    steps:
      - restore_cache:
          key: dependency-cache-{{ checksum "mix.lock" }}
      - restore_cache:
          key: build-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
  save_to_cache:
    description: Saves dependencies and compiled files to cache
    steps:
      - save_cache:
          key: dependency-cache-{{ checksum "mix.lock" }}
          paths:
            - deps
      - save_cache:
          key: build-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths:
            - _build
executors:
  build:
    docker:
      - image: circleci/elixir:1.9.2
        environment:
          MIX_ENV: test
    working_directory: ~/lib
jobs:
  build:
    executor: build
    steps:
      - checkout
      - download_hex
      - fetch_from_cache
      - run: mix deps.get
      - run: mix compile --warnings-as-errors
      - save_to_cache
      - persist_to_workspace:
          root: ~/
          paths:
            - .mix
            - lib
  check:
    executor: build
    steps:
      - attach_workspace:
          at: ~/
      - run: mix credo --strict
      - run: mix format --check-formatted
      - run: MIX_ENV=dev mix docs
      - restore_cache:
          key: plt-cache-{{ checksum "mix.lock" }}
      - run: mix dialyzer
      - save_cache:
          key: plt-cache-{{ checksum "mix.lock" }}
          paths:
            - ~/.mix
            - _build
            - deps
  test:
    executor: build
    steps:
      - attach_workspace:
          at: ~/
      - run: mix coveralls.json
      - run: bash <(curl -s https://codecov.io/bash)
      - store_artifacts:
          path: cover
          destination: coverage_results
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - check:
          requires:
            - build
      - test:
          requires:
            - build
